{
	"info": {
		"_postman_id": "18964c91-8ef8-4fa4-8254-f8cb72fbd9bc",
		"name": "UserAPI - Test Suite",
		"description": "API to create and manage user data. It allows users to register, login and get/update/delete their data.\n\nThis test suite verifies that all the endpoints of the API are working correctly.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "27191234-18964c91-8ef8-4fa4-8254-f8cb72fbd9bc"
	},
	"item": [
		{
			"name": "Register a new user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8aedb722-6e2c-45ea-b2ca-9c0590b85bb0",
						"exec": [
							"pm.variables.set(\"rUserName\", pm.variables.replaceIn('{{$randomUserName}}'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ae0c2102-e9a1-4a33-abb0-de933178a856",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username was correctly set\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "091e5951-61bc-46a3-9bbf-98a025e750bf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": [
				{
					"id": "74f86ba9-aa26-4955-8c6c-a650d0951e51",
					"name": "User registered successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/register",
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "1db8d05b-bbfd-460a-9eea-887b8f3e5701",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Log in a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d8055b3a-9697-42e9-aa2f-cf8408f53ed9",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							"",
							"pm.variables.set(\"newUserID\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "adac6b76-2363-436f-bb72-8587d272da15",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"id": "ed75ae72-80f4-480f-adf3-5c24089c31c2",
					"name": "User logged in successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/login",
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "d53303ee-6b57-41f1-9ebc-5e302654cd0b",
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "24ffde27-e3ef-4a9b-8722-ae6e7587bdc0",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Retrieve a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "518ce45b-7c35-48ab-a2f1-b824123420b1",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "32908ee3-6c1f-4b55-bb5d-c1eedb78b7af",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "7eaad4e9-b1cf-4b9c-8f9e-5dca5ab3ddd5",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "/v1/users/:id",
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
				},
				{
					"id": "1aaa584c-e14f-4872-93ae-bd383de00882",
					"name": "User not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "5c6c95b9-2bc5-4bfb-9b45-37f65106b1bc",
					"name": "Error occurred",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update a user",
			"id": "3a4e8aea-c104-492a-b033-5f8b0b755409",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "e9e91da5-8e4c-4893-ba18-517489a60b75",
					"name": "User updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "20abc6cf-e1b6-46c6-9b64-7ef2d523052d",
					"name": "Error occurred",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Delete a user",
			"id": "1b74d0d7-48f1-49dc-acf3-384c4b6b0f25",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "e13ceefa-aade-4faf-87fe-20fc76bdb7be",
					"name": "User deleted successfully",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "84081e1b-1667-4131-b058-9199ab4c769c",
					"name": "Error occurred",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b369e76f-a56b-478c-be11-3c4685305921",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c912ee0d-81af-491d-9267-d53a868fc6f3",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 800ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(800);",
					"});",
					"",
					"pm.test(\"Successful request\", ()=> { ",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
					"});",
					""
				]
			}
		}
	]
}